// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.uk');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Додати коментар";
Blockly.Msg.ARRAY_GET_TITLE = "";  // untranslated
Blockly.Msg.AUTH = "Будь ласка, авторизуйте цю програму, аби можна було зберігати вашу роботу і для надання можливості вам поширювати її.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Змінити значення:";
Blockly.Msg.CHAT = "Спілкуйтеся з вашими співавторами, набираючи у цьому полі!";
Blockly.Msg.COLLAPSE_ALL = "Згорнути блоки";
Blockly.Msg.COLLAPSE_BLOCK = "Згорнути блок";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "колір 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "колір 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "співвідношення";
Blockly.Msg.COLOUR_BLEND_TITLE = "суміш";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Змішує дві барви разом з даним співвідношенням (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://uk.wikipedia.org/wiki/Колір";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Вибрати колір з палітри.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "випадковий колір";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Вибрати колір навмання.";
Blockly.Msg.COLOUR_RGB_BLUE = "синій";
Blockly.Msg.COLOUR_RGB_GREEN = "зелений";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "червоний";
Blockly.Msg.COLOUR_RGB_TITLE = "колір з";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Створити колір з указаного червоного, зеленого та синього.  Усі значення мають бути від 0 до 100.";
Blockly.Msg.COMMENT_MUTATOR_COMMENTADD_TITLE = "Add";  // untranslated
Blockly.Msg.COMMENT_TITLE = "comment";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#Loop_Termination_Blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "перервати цикл";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "продовжити з наступної ітерації циклу";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Вирватися з циклічних оточень.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Пропустити залишок цього циклу і перейти до виконання наступної ітерації.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Попередження: цей блок може бути використаний тільки в межах циклу.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#for_each for each block";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "у списку";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "блок тексту";
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "для кожного елемента";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#count_with";
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "від %1 до %2 через %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "рахувати з";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Наявна змінна %1 приймає значення від початкового значення до кінцевого значення, враховуючи заданий інтервал, і зробіть вказані блоки.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Додати умову до якщо блокувати.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Додати остаточну, всеосяжну умова до блоку якщо.";
Blockly.Msg.CONTROLS_IF_HELPURL = "http://code.google.com/p/blockly/wiki/If_Then";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Додати, видалити або змінити порядок розділів переналаштувати це, якщо блокується.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "інакше";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "Інакше якщо";
Blockly.Msg.CONTROLS_IF_MSG_IF = "якщо";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Якщо значення true, зробити деякі заяви.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Якщо значення істина, то виконується перший блок операторів. В іншому випадку виконується другий блок операторів.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Якщо перше значення істина, то виконується перший блок операторів. В іншому випадку, якщо друге значення істина, то виконується другий блок операторів.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Якщо перше значення істина, то виконується перший блок операторів. В іншому випадку, якщо друге значення істина, то виконується другий блок операторів. Якщо жодне із значень не є істинним, то виконується останній блок операторів.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://en.Wikipedia.org/Wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "зробити";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "повторити %1 разів";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "повторити";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "разів";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Зробити деякі заяви кілька разів.";
Blockly.Msg.CONTROLS_SWITCH = "switch ";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK = "break";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK_TOOLTIP = "break the statement and leave the switch block.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK_WARNING = "WARNING : This block must be in switch block.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_CASE = "case";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_CASE_TOOLTIP = "Add case.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_DEFAULT = "if there are no corresponding value";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_DO = "DO";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP1 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP2 = "if there are no corresponding value, do first block statement, if value correspond with second value, do second block statement, and if value correspond with third value, do third block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP3 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement, .... , and if value correspond with last value, do last block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP4 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement, .... , and if value correspond with last value, do last block statement.";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "http://code.google.com/p/blockly/wiki/Repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "повторювати доки";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "повторювати поки";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Поки значення false, зробити деякі заяви.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Поки значення true, зробити деякі заяви.";
Blockly.Msg.DEFINE_DECLARE_DEFAULT_NAME = "myMacro";  // untranslated
Blockly.Msg.DEFINE_DECLARE_INIT = "is";  // untranslated
Blockly.Msg.DEFINE_DECLARE_TITLE = "#define";  // untranslated
Blockly.Msg.DEFINE_GET_TITLE = "";  // untranslated
Blockly.Msg.DEFINE_SET_TYPE_CONSTANT = "constant";  // untranslated
Blockly.Msg.DEFINE_SET_TYPE_MACRO = "macro";  // untranslated
Blockly.Msg.DELETE_BLOCK = "Видалити блок";
Blockly.Msg.DELETE_X_BLOCKS = "Видалити %1 блоків";
Blockly.Msg.DISABLE_BLOCK = "Вимкнути блок";
Blockly.Msg.DUPLICATE_BLOCK = "Дублікат";
Blockly.Msg.ENABLE_BLOCK = "Увімкнути блок";
Blockly.Msg.EXPAND_ALL = "Розгорнути блоки";
Blockly.Msg.EXPAND_BLOCK = "Розгорнути блок";
Blockly.Msg.EXTERNAL_INPUTS = "Зовнішні входи";
Blockly.Msg.FUNCTION_SET_TYPE_CHAR = "char";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_DOUBLE = "double";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_FLOAT = "float";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_INT = "int";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONG = "long";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONGDOUBLE = "long double";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONGLONG = "long long";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_SHORT = "short";  // untranslated
Blockly.Msg.HELP = "Довідка";
Blockly.Msg.INLINE_INPUTS = "Вбудовані входи";
Blockly.Msg.IOSTREAM_CIN_MUTATOR_CINADD_TITLE = ">>";  // untranslated
Blockly.Msg.IOSTREAM_CIN_TITLE = "cin >>";  // untranslated
Blockly.Msg.IOSTREAM_CIN_TOOLTIP = "Read input from terminal";  // untranslated
Blockly.Msg.IOSTREAM_COUT_MUTATOR_COUTADD_TITLE = "<<";  // untranslated
Blockly.Msg.IOSTREAM_COUT_TITLE = "cout <<";  // untranslated
Blockly.Msg.IOSTREAM_NEWLINE_TITLE = "end line";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://uk.wikipedia.org/wiki/Зв%27язаний_список";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "створити порожній список";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Повертає список, довжиною 0, що не містить записів даних";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "список";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Додати, видалити або змінити порядок розділів для переналаштування блокування списку.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "створює список з";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Додати елемент до списку.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Створює список з будь-якою кількістю елементів.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "перший";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# з кінця";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "отримати";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "отримати і видалити";
Blockly.Msg.LISTS_GET_INDEX_LAST = "останній";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "випадковий";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "вилучити";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "-ий.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Повертає перший елемент у списку.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Повертає елемент у заданій позиції у списку. #1 - це останній пункт.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Повертає елемент у заданій позицію у списку. #1 - це перший пункт.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Повертає останній елемент списку.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Повертає випадковий елемент у списку.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Видаляє і повертає перший елемент у списку.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Видаляє і повертає елемент у заданій позиції у списку. #1 - це останній пункт.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Видаляє і повертає елемент у заданій позиції у списку. #1 - це перший пункт.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Видаляє і повертає останній елемент списку.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Видаляє і повертає випадковий елемент у список.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Видаляє перший елемент у списку.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Вилучає елемент у вказаній позиції списку. #1 - це останній пункт.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Вилучає елемент у вказаній позиції списку. #1 - це перший пункт.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Видаляє останній елемент списку.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Видаляє випадковий елемент у списку.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "до # з кінця";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "до #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "до останнього";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_a_sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "отримати вкладений список з першого";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "отримати вкладений список від # з кінця";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "отримати вкладений список з #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "символу.";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Створює копію вказаної частини списку.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "знайти перше входження елемента";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_Items_from_a_List";
Blockly.Msg.LISTS_INDEX_OF_LAST = "знайти останнє входження елемента";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Повертає індекс першого/останнього входження першого елементу у списку. Повертає 0, якщо текст не знайдений.";
Blockly.Msg.LISTS_INLIST = "у списку";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#is_empty";
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 є порожнім";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#length_of";
Blockly.Msg.LISTS_LENGTH_TITLE = "довжина %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Повертає довжину списку.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#create_list_with";
Blockly.Msg.LISTS_REPEAT_TITLE = "створити список з елемента %1 повтореного %2 разів";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Створює список, що складається з заданого значення повтореного певну кількість разів.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#in_list_..._set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "як";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "вставити в";
Blockly.Msg.LISTS_SET_INDEX_SET = "встановити";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Вставляє елемент на початок списку.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Вставляє елемент у вказану позицію списку. #1 - це останній пункт.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Вставка елемента у вказану позицію списку.  #1 є першим пунктом.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Додає елемент до кінця списку.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Випадковим чином вставляє елемент у списку.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Задає перший елемент у списку.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Задає елемент у вказаній позиції списку. #1 - це останній пункт.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Задає елемент у вказаній позиції списку. #1 - це перший пункт.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Задає останній елемент списку.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Задає випадковий елемент у списку.";
Blockly.Msg.LISTS_TOOLTIP = "Повертає істина, якщо список порожній.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "хибність";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "http://code.google.com/p/blockly/wiki/True_False";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Повертає значення ІСТИНА або ХИБНІСТЬ.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "істина";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://uk.wikipedia.org/wiki/Нерівність";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Повертає true, якщо обидва входи рівні один одному.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Повертає true, якщо перше вхідне значення більше, ніж другий вхід.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Повертає true, якщо перше вхідне значення більше або дорівнює другому входу.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Повертає true, якщо перше вхідне значення менше, ніж другий вхід.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Повертає true, якщо перше вхідне значення менше або дорівнює другому входу.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Повертає true, якщо обидва входи не дорівнюють один одному.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "http://code.google.com/p/blockly/wiki/Not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "не %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Повертає істина, якщо вхідне значення хибність. Повертає хибність, якщо вхідна значення істина.";
Blockly.Msg.LOGIC_NULL = "нічого";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Повертає null.";
Blockly.Msg.LOGIC_OPERATION_AND = "та";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "http://code.google.com/p/blockly/wiki/And_Or";
Blockly.Msg.LOGIC_OPERATION_OR = "або";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Повертає true, якщо обидва входи істинні.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Повертає true, якщо принаймні один з входів  true.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "тест";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "Якщо хибність";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "якщо істина";
Blockly.Msg.MAINPROCEDURES_TOOLTIP = "basically provided main function block. return integer value";  // untranslated
Blockly.Msg.MAIN_BLOCK = "on start";  // untranslated
Blockly.Msg.MAIN_BLOCK_RETURN = "int type return value:";  // untranslated
Blockly.Msg.MATH_ABS_TITLE = "absolute value%1";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://uk.wikipedia.org/wiki/Арифметика";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Повертає суму двох чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Повертає частку двох чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Повертає різницю двох чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Повертає добуток двох чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Повертає перше число, піднесене до степеня другого числа.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "від";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "змінити";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://uk.wikipedia.org/wiki/Математична_константа";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Повертає одну з поширених констант: π (3.141...), e (2.718...), φ (1,618...), sqrt(2) (1.414...), sqrt(½) (0.707...) або ∞ (безмежність).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "обмежити %1 від %2 до %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Обмежує число вказаними межами (включно).";
Blockly.Msg.MATH_COS_TITLE = "cos %1";  // untranslated
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_EXP_TITLE = "exp %1";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "ділиться на";
Blockly.Msg.MATH_IS_EVEN = "парне";
Blockly.Msg.MATH_IS_NEGATIVE = "від'ємне";
Blockly.Msg.MATH_IS_ODD = "непарне";
Blockly.Msg.MATH_IS_POSITIVE = "додатне";
Blockly.Msg.MATH_IS_PRIME = "просте";
Blockly.Msg.MATH_IS_TOOLTIP = "Перевіряє, чи число парне, непарне, просте, ціле, додатне, від'ємне або чи воно ділиться на певне число без остачі. Повертає істина або хибність.";
Blockly.Msg.MATH_IS_WHOLE = "ціле";
Blockly.Msg.MATH_MODULO_HELPURL = "https://uk.wikipedia.org/wiki/Ділення_з_остачею";
Blockly.Msg.MATH_MODULO_TITLE = "остача від %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Повертає остачу від ділення двох чисел.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://uk.wikipedia.org/wiki/Число";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Число.";
Blockly.Msg.MATH_NUMCHECK_ISFINITE = "finite value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_ISINF = "infinite value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_ISNAN = "NaN value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_SIGNBIT = "negative value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_TITLE = "%1 is a(an) %2 ?";  // untranslated
Blockly.Msg.MATH_NUMCHECK_TOOLTIP = "";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISGREATER = "greater";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISGREQ = "greater or equal";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLEEQ = "less or equal";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLEGR = "less or greater";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLESS = "less";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISUNORDER = "unordered";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_TITLE = "%1 is %3 than %2";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_TOOLTIP = "";  // untranslated
Blockly.Msg.MATH_ONLIST_HELPURL = "http://www.mapleprimes.com/questions/100441-Applying-Function-To-List-Of-Numbers";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "середнє списку";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "максимум списку";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "медіана списку";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "мінімум списку";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "моди списку";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "випадковий елемент списку";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "стандартне відхилення списку";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "сума списку";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Повертає середнє (арифметичне) числових значень у списку.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Повертає найбільше число у списку.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Повертає медіану списку.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Повертає найменше число у списку.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Повертає перелік найпоширеніших елементів у списку.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Повертає випадковий елемент зі списку.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Повертає стандартне відхилення списку.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Повертає суму всіх чисел у списку.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_POW_TITLE = "pow %1 ^ %2";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://uk.wikipedia.org/wiki/Генерація_випадкових_чисел";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "випадковий дріб";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Повертає випадковий дріб від 0,0 (включно) та 1.0 (не включно).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://uk.wikipedia.org/wiki/Генерація_випадкових_чисел";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "випадкове ціле число від %1 до %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Повертає випадкове ціле число між двома заданими межами включно.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_CEIL = "round up";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_FLOOR = "round down";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "округлити";
Blockly.Msg.MATH_ROUND_OPERATOR_TRUNC = "truncate";  // untranslated
Blockly.Msg.MATH_ROUND_TOOLTIP = "Округлення числа у більшу або меншу сторону.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://uk.wikipedia.org/wiki/Квадратний_корінь";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "модуль";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "квадратний корінь";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Повертає модуль числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Повертає e у степені.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG = "Return the natural logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Повертає десятковий логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG2 = "Return the base 2 logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Повертає протилежне число.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW = "Return base to the power of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Повертає квадратний корінь числа.";
Blockly.Msg.MATH_SIN_TITLE = "sin %1";  // untranslated
Blockly.Msg.MATH_SQRT_TITLE = "sqrt %1";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TAN_TITLE = "tan %1";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://uk.wikipedia.org/wiki/Тригонометричні_функції";
Blockly.Msg.MATH_TRIG_LOG = "log";  // untranslated
Blockly.Msg.MATH_TRIG_LOG10 = "log10";  // untranslated
Blockly.Msg.MATH_TRIG_LOG2 = "log2";  // untranslated
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Повертає арккосинус числа.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Повертає арксинус числа.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Повертає арктангенс числа.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Повертає косинус кута у градусах (не у радіанах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Повертає синус кута у градусах (не у радіанах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Повертає тангенс кута у градусах (не у радіанах).";
Blockly.Msg.ME = "Я";
Blockly.Msg.NEW_VARIABLE = "Нова змінна...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Нове ім'я змінної:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "-ий.";
Blockly.Msg.PLZ_INSIDE_FUNCTION = "Warning: Place this block inside a function.";  // untranslated
Blockly.Msg.PLZ_OUT_OF_BLOCK = "Warning: This block can be placed out of other blocks except function block.";  // untranslated
Blockly.Msg.PLZ_OUT_OF_FUNCTION = "Warning: Place this block out of a function.";  // untranslated
Blockly.Msg.POINTER_GET_TITLE = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";  // untranslated
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "з:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "блок тексту";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://uk.wikipedia.org/wiki/Підпрограма";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "з:";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "блок тексту";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://uk.wikipedia.org/wiki/Підпрограма";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "щось зробити";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "до";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Створює функцію без виводу.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://uk.wikipedia.org/wiki/Підпрограма";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "повернути";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Створює функцію з виводу.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Увага: ця функція має дубльовані параметри.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Визначення функції підсвітки";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Якщо значення true, то повернути друге значення.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Попередження: Цей блок може використовуватися лише в межах визначення функції.";
Blockly.Msg.PROCEDURES_ILLEGALNAME = "illegal function name";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "ім'я входу:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Додати вхідні параметри в функцію.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "вхід";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Додати, видалити або змінити порядок вхідних параметрів для цієї функції.";
Blockly.Msg.PROCEDURES_RETURN_TITLE = "terminate function after return ";  // untranslated
Blockly.Msg.PROCEDURES_RETURN_TOOLTIP = "Terminate function after return what you want to return. you can use it in anywhere";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Видалити коментар";
Blockly.Msg.RENAME_VARIABLE = "Перейменувати змінну...";
Blockly.Msg.SELECT_MENU = "--Select--";  // untranslated
Blockly.Msg.SELECT_TYPE = "--Type--";  // untranslated
Blockly.Msg.STDIO_NEWLINE_HELPURL = "https://en.wikipedia.org/wiki/Newline";  // untranslated
Blockly.Msg.STDIO_NEWLINE_TITLE = "new line";  // untranslated
Blockly.Msg.STDIO_NEWLINE_TOOLTIP = "new line character";  // untranslated
Blockly.Msg.STDIO_PRINTF_TITLE = "printf";  // untranslated
Blockly.Msg.STDIO_SCANF_HELPURL = "https://en.wikipedia.org/wiki/Scanf_format_string";  // untranslated
Blockly.Msg.STDIO_SCANF_TITLE = "scanf";  // untranslated
Blockly.Msg.STDIO_SCANF_TOOLTIP = "";  // untranslated
Blockly.Msg.STDIP_PRINTF_MUTATOR_PRINTFADD_TITLE = "Add";  // untranslated
Blockly.Msg.STDIP_SCANF_MUTATOR_SCANFADD_TITLE = "Add";  // untranslated
Blockly.Msg.STDLIB_ARITHFORMALLOC_TITLE = "%1 x %2";  // untranslated
Blockly.Msg.STDLIB_CONVERT_DOUBLE = "double";  // untranslated
Blockly.Msg.STDLIB_CONVERT_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STDLIB_CONVERT_INT = "int";  // untranslated
Blockly.Msg.STDLIB_CONVERT_TITLE = "Convert string %1 to %2";  // untranslated
Blockly.Msg.STDLIB_CONVERT_TOOLTIP = "Convert stirng to integer or double type.";  // untranslated
Blockly.Msg.STDLIB_EXIT_FAILURE = "failure";  // untranslated
Blockly.Msg.STDLIB_EXIT_HELPURL = "https://en.wikipedia.org/wiki/Exit_(system_call)";  // untranslated
Blockly.Msg.STDLIB_EXIT_SUCCESS = "success";  // untranslated
Blockly.Msg.STDLIB_EXIT_TITLE = "exit %1";  // untranslated
Blockly.Msg.STDLIB_EXIT_TOOLTIP = "Exit.";  // untranslated
Blockly.Msg.STDLIB_FREE_HELPURL = "https://en.wikipedia.org/wiki/C_dynamic_memory_allocation";  // untranslated
Blockly.Msg.STDLIB_FREE_TITLE = "free %1";  // untranslated
Blockly.Msg.STDLIB_FREE_TOOLTIP = "deallocate the memory";  // untranslated
Blockly.Msg.STDLIB_MALLOC_HELPURL = "https://en.wikipedia.org/wiki/C_dynamic_memory_allocation";  // untranslated
Blockly.Msg.STDLIB_MALLOC_TITLE = "malloc %1";  // untranslated
Blockly.Msg.STDLIB_MALLOC_TOOLTIP = "Dinamic memory allocation";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_HELPURL = "https://en.wikipedia.org/wiki/C_mathematical_functions#Random_number_generation";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_TITLE = "scope:%1~%2";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_TOOLTIP = "assign scope of random number.";  // untranslated
Blockly.Msg.STDLIB_RAND_HELPURL = "https://en.wikipedia.org/wiki/C_mathematical_functions#Random_number_generation";  // untranslated
Blockly.Msg.STDLIB_RAND_TITLE = "rand %1";  // untranslated
Blockly.Msg.STDLIB_RAND_TOOLTIP = "assign random number";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_HELPURL = "https://en.wikipedia.org/wiki/Sizeof";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_TITLE = "size of %1";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_TOOLTIP = "return the size by byte";  // untranslated
Blockly.Msg.STDLIB_SRAND_TITLE = "srand %1";  // untranslated
Blockly.Msg.STRING_STRCAT_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCAT_TITLE = "string add %1 and %2";  // untranslated
Blockly.Msg.STRING_STRCAT_TOOLTIP = "concat two strings";  // untranslated
Blockly.Msg.STRING_STRCMP_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCMP_TITLE = "string compare %1 and %2";  // untranslated
Blockly.Msg.STRING_STRCMP_TOOLTIP = "compare two strings";  // untranslated
Blockly.Msg.STRING_STRCPY_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCPY_TITLE = "string copy from %1 to %2";  // untranslated
Blockly.Msg.STRING_STRCPY_TOOLTIP = "copy first string into second string";  // untranslated
Blockly.Msg.STRING_STRLEN_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRLEN_TITLE = "string length %1";  // untranslated
Blockly.Msg.STRING_STRLEN_TOOLTIP = "return length of string";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_NAME = "myStructure1";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TALE = "name";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TITLE = "type";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TOOPTIP = "declare structure by selecting predefined structure(similar with declaring variables). it must be before using structure.";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_NAME = "myStructure";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_TITLE = "structure type name";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_TOOPTIP = "define structure. you can add, delete, rename the member of structure. it must be before using structure.";  // untranslated
Blockly.Msg.STRUCTURE_GET_MEMBER = "member";  // untranslated
Blockly.Msg.STRUCTURE_GET_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_GET_TOOLTIP = "return value of structure member or structure itself.";  // untranslated
Blockly.Msg.STRUCTURE_ILLEGALNAME = "illegal structure name";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORARG_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORARG_TOOLTIP = "add member of structure.";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORCONTAINER_TITLE = "members";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORCONTAINER_TOOLTIP = "add, delete, or rearrange member.";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_ARRAY = "array type";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_POINTER = "pointer type";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_VAR = "variable type";  // untranslated
Blockly.Msg.STRUCTURE_SET_MEMBER = "member";  // untranslated
Blockly.Msg.STRUCTURE_SET_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_SET_TOOLTIP = "assignment(set) the value into structure member or structure itself.";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "додати текст";
Blockly.Msg.TEXT_APPEND_HELPURL = "http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";
Blockly.Msg.TEXT_APPEND_TO = "до";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "до нижнього регістру";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "Великі Перші Букви";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "до ВЕРХНЬОГО регістру";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Повернути копію тексту в іншому випадку.";
Blockly.Msg.TEXT_CHARAT_FIRST = "отримати перший символ";
Blockly.Msg.TEXT_CHARAT_FROM_END = "отримати символ # з кінця";
Blockly.Msg.TEXT_CHARAT_FROM_START = "отримати символ";
Blockly.Msg.TEXT_CHARAT_HELPURL = "http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "у тексті";
Blockly.Msg.TEXT_CHARAT_LAST = "отримати останній символ";
Blockly.Msg.TEXT_CHARAT_RANDOM = "отримати випадковий символ";
Blockly.Msg.TEXT_CHARAT_TAIL = "-ий.";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Повертає символ у зазначеній позиції.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Додати елемент до тексту.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "приєднати";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Додати, видалити або змінити порядок розділів для переналаштування блокування тексту.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "до символу з кінця";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "до символу #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "до останнього символу";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "http://code.google.com/p/blockly/wiki/Text#Extracting_a_region_of_text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "у тексті";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "отримати підрядок від першого символу";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "отримати підрядок від символу # з кінця";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "отримати підрядок від символу";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "-ого.";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Повертає заданий фрагмент тексту.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Finding_text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "у тексті";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "знайти перше входження тексту";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "знайти останнє входження тексту";
Blockly.Msg.TEXT_INDEXOF_TAIL = ".";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Повертає індекс першого/останнього входження першого тексту у другому. Повертає 0, якщо текст не знайдений.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Checking_for_empty_text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 є порожнім";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Повертає true, якщо вказаний текст порожній.";
Blockly.Msg.TEXT_JOIN_HELPURL = "http://www.chemie.fu-berlin.de/chemnet/use/info/make/make_8.html";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "створити текст з";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Створити фрагмент тексту шляхом приєднання будь-якого числа елементів.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "довжина %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Повертає число символів (включаючи пробіли) у даному тексті.";
Blockly.Msg.TEXT_PRINT_HELPURL = "http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";
Blockly.Msg.TEXT_PRINT_TITLE = "друк %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Надрукувати заданий текст, числа або інші символи.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode92.html";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Запитувати у користувача число.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Запитувати у користувача деякий текст.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "запит на число з повідомлення";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "запит на текст з повідомлення";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://uk.wikipedia.org/wiki/Рядок_(програмування)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Символ, слово або рядок тексту.";
Blockly.Msg.TEXT_TRIM_HELPURL = "http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "викидайте крайні пробіли з обох сторін";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "вилучати пробіли з лівого боку";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "вилучати пробіли з правого боку";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Повертає копію тексту з пробілами вилученими від одного або обох кінців.";
Blockly.Msg.TIME_REQRUIEDTIME_TALE = "save in double variable %1";  // untranslated
Blockly.Msg.TIME_REQUIREDTIME_TITLE = "time to do followings";  // untranslated
Blockly.Msg.TIME_REQUIREDTIME_TOOLTIP = "save the time that is taken for doing followings into double variable";  // untranslated
Blockly.Msg.TIME_TIME_CURRENT_TITLE = "print current time";  // untranslated
Blockly.Msg.UNION_DEFINE_NAME = "myUnion";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_DEFAULT_NAME = "myArray";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_LENGTH = "length";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_TITLE = "array";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_DEFAULT_NAME = "myVariable";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_INIT = "initial value";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_NAME = "name";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_TITLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_TOOLTIP = "declare variables";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "елемент";
Blockly.Msg.VARIABLES_GET_HELPURL = "http://code.google.com/p/blockly/wiki/Variables#Get";
Blockly.Msg.VARIABLES_GET_TAIL = "значення";
Blockly.Msg.VARIABLES_GET_TITLE = "значення";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Повертає значення цієї змінної.";
Blockly.Msg.VARIABLES_ILLEGALNAME = "illegal variable name";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_DEFAULT_NAME = "myPointer";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_ITERATION = "";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_TITLE = "pointer";  // untranslated
Blockly.Msg.VARIABLES_RETURN = "return ";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_ONE = "[]";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_THREE = "[][][]";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_TWO = "[][]";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_ARRAY = "array";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_POINTER = "pointer";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_VARIABLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_SET_HELPURL = "http://code.google.com/p/blockly/wiki/Variables#Set";
Blockly.Msg.VARIABLES_SET_ITERATION_DOUBLE = "**";  // untranslated
Blockly.Msg.VARIABLES_SET_ITERATION_NORMAL = "*";  // untranslated
Blockly.Msg.VARIABLES_SET_ITERATION_TRIPLE = "***";  // untranslated
Blockly.Msg.VARIABLES_SET_POINTER_SPEC_ONE = "*";  // untranslated
Blockly.Msg.VARIABLES_SET_POINTER_SPEC_TWO = "**";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "до";
Blockly.Msg.VARIABLES_SET_TITLE = "встановити";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Задає цю змінну рівною вводу.";
Blockly.Msg.VARIABLES_SET_TYPE_CHAR = "character";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_DOUBLE = "real number(double)";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_FLOAT = "real number(float)";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_INT = "integer";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_UNSIGNED_INT = "unsigned int";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;


 // atuo generated donnot editBlockly.Msg.TAG_DEFINE_DECLARE = ['macro', 'constant'];
Blockly.Msg.TAG_DEFINE_GET = ['macro', 'constant', 'get'];
Blockly.Msg.TAG_VARIABLE_DECLARE = ['variables', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_SET = ['variables', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_GET = ['variables', 'get'];
Blockly.Msg.TAG_VARIABLE_POINTER_DECLARE = ['pointer', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_POINTER_SET = ['pointer', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_POINTER_GET = ['pointer', 'get'];
Blockly.Msg.TAG_VARIABLE_POINTER_ADDR = ['&', 'address'];
Blockly.Msg.TAG_VARIABLE_POINTER_ASTR = ['*', 'asterisk'];
Blockly.Msg.TAG_VARIABLE_ARRAY_DECLARE = ['array', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_ARRAY_SET = ['array', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_ARRAY_GET = ['array', 'get'];

Blockly.Msg.TAG_STRUCTURE_DEFINE = ['structure', 'typedef', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_STRUCTURE_DECLARE = ['structure', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_STRUCTURE_GET = ['structure', 'get'];
Blockly.Msg.TAG_STRUCTURE_SET = ['structure', 'assignment', 'set'];

Blockly.Msg.TAG_LOGIC_IF = ['if', 'if else', 'ifelse'];
Blockly.Msg.TAG_LOGIC_COMPARE = ['compare'];
Blockly.Msg.TAG_LOGIC_OPERATION = ['operation', 'and', 'or'];
Blockly.Msg.TAG_LOGIC_NEGATE = ['!', 'negate'];
Blockly.Msg.TAG_LOGIC_BOOLEAN = ['boolean', 'true', 'false'];
Blockly.Msg.TAG_LOGIC_NULL = ['null', 'null character'];
Blockly.Msg.TAG_LOGIC_TERNARY = ['?'];
Blockly.Msg.TAG_LOGIC_SWITCH = ['switch', 'case'];

Blockly.Msg.TAG_LOOP_WHILE = ['while', 'loop'];
Blockly.Msg.TAG_LOOP_FOR = ['for', 'loop'];
Blockly.Msg.TAG_LOOP_FLOW = ['break', 'continue'];

Blockly.Msg.TAG_PROCEDURE_DEFNORETURN = ['void', 'function'];
Blockly.Msg.TAG_PROCEDURE_DEFRETURN = ['function'];

Blockly.Msg.TAG_STDIO_PRINTF = ['stdio.h', 'printf()', 'output', 'out'];
Blockly.Msg.TAG_STDIO_TEXT = ['stdio.h', 'text'];
Blockly.Msg.TAG_STDIO_NEWLINE = ['stdio.h', 'newline', 'new line', '\n', 'change line', 'line change'];
Blockly.Msg.TAG_STDIO_SCANF = ['stdio.h', 'scanf()', 'input'];

Blockly.Msg.TAG_IOSTREAM_COUT = ['iostream', 'cout', 'output', 'out'];
Blockly.Msg.TAG_IOSTREAM_TEXT = ['iostream', 'text'];
Blockly.Msg.TAG_IOSTREAM_NEWLINE = ['iostream', 'newline', 'new line', '\n', 'change line', 'line change'];
Blockly.Msg.TAG_IOSTREAM_CIN = ['iostream', 'cin', 'input'];

Blockly.Msg.TAG_COMMENT = ['comment', 'Comment', '\/\/', '\/**\/'];

Blockly.Msg.TAG_STDLIB_CONVERT = ['stdlib.h', 'convert', 'atoi()', 'atof()'];
Blockly.Msg.TAG_STDLIB_RAND = ['stdlib.h', 'random number'];
Blockly.Msg.TAG_STDLIB_MALLOC = ['stdlib.h', 'malloc()', 'memory allocation', 'memory allocate'];
Blockly.Msg.TAG_STDLIB_SIZEOF = ['stdlib.h', 'sizeof()', 'size of', 'sizeOf'];
Blockly.Msg.TAG_STDLIB_FREE = ['stdlib.h', 'free()'];
Blockly.Msg.TAG_STDLIB_EXIT = ['stdlib.h', 'exit(0)', 'exit(1)', 'end', 'the end'];

Blockly.Msg.TAG_STRING_STRLEN = ['string.h', 'strlen()', 'string length', 'length of string'];
Blockly.Msg.TAG_STRING_STRCAT = ['string.h', 'strcat()', 'string concatenate', 'concatenate string'];
Blockly.Msg.TAG_STRING_STRCPY = ['string.h', 'strcpy()', 'string copy', 'copy string'];
Blockly.Msg.TAG_STRING_STRCMP = ['string.h', 'strcmp()', 'string compare', 'compare string'];

Blockly.Msg.TAG_MATH_ABS = ['math.h', 'absolute value'];
Blockly.Msg.TAG_MATH_TRIG = ['math.h', 'trigonometric function', 'sin()', 'cos()', 'tan()', 'sine function', 'cosine function', 'tangent function'];
Blockly.Msg.TAG_MATH_LOGS = ['math.h', 'log()', 'loge()', 'log10()', 'log2()', 'log e'];
Blockly.Msg.TAG_MATH_POW = ['math.h', 'power', 'pow()'];
Blockly.Msg.TAG_MATH_EXP = ['math.h', 'exponential function', 'exp()'];
Blockly.Msg.TAG_MATH_SQRT = ['math.h', 'sqrt()', 'square root'];
Blockly.Msg.TAG_MATH_ROUND = ['math.h', 'round up', 'round down', 'round()', 'trunc()', 'ceil()', 'floor()', 'truncate'];
Blockly.Msg.TAG_MATH_NUMCHECK = ['math.h', 'two number check'];
Blockly.Msg.TAG_MATH_NUMCOMPARE = ['math.h', 'two number compare'];
Blockly.Msg.TAG_MATH_NUMBER = ['number'];
Blockly.Msg.TAG_MATH_ARITHMETIC = ['number', 'arithmetic', 'additionsubtractionmultiplicationdivision', '+-*/'];
Blockly.Msg.TAG_MATH_MODULO = ['arithmetic', 'remainder', '%'];

Blockly.Msg.TAG_TIME_CURRENT = ['time.h', 'get current time', 'print current time'];
Blockly.Msg.TAG_TIME_REQUIREDTIME = ['time.h', 'the time to do followings'];