// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.pms');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Gionté un coment";
Blockly.Msg.ARRAY_GET_TITLE = "";  // untranslated
Blockly.Msg.AUTH = "Për piasì, ch'a autorisa costa aplicassion a përmëtte ëd salvé sò travaj e a autoriselo a esse partagià da chiel.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Modifiché ël valor:";
Blockly.Msg.CHAT = "Ch'a ciaciara con sò colaborator an scrivend an costa casela!";
Blockly.Msg.COLLAPSE_ALL = "Arduve ij blòch";
Blockly.Msg.COLLAPSE_BLOCK = "Arduve ël blòch";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "rapòrt";
Blockly.Msg.COLOUR_BLEND_TITLE = "mës-cé";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "A mës-cia doi color ansema con un rapòrt dàit (0,0 - 1,0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Serne un color ant la taulòssa.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "color a asar";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Serne un color a asar.";
Blockly.Msg.COLOUR_RGB_BLUE = "bleu";
Blockly.Msg.COLOUR_RGB_GREEN = "verd";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "ross";
Blockly.Msg.COLOUR_RGB_TITLE = "coloré con";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Creé un color con la quantità spessificà ëd ross, verd e bleu. Tuti ij valor a devo esse antra 0 e 100.";
Blockly.Msg.COMMENT_MUTATOR_COMMENTADD_TITLE = "Add";  // untranslated
Blockly.Msg.COMMENT_TITLE = "comment";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#Loop_Termination_Blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "seurte da la liassa";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continué con l'iterassion sucessiva dla liassa";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Seurte da la liassa anglobanta.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sauté ël rest ëd sa liassa, e continué con l'iterassion apress.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Atension: Ës blòch a peul mach esse dovrà andrinta a na liassa.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#for_each for each block";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "ant la lista";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "për minca element";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#count_with";  // untranslated
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "da %1 a %2 për %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "conté con";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Fé an manera che la variàbil %1 a pija ij valor dal nùmer inissial fin-a al nùmer final, an contand për l'antërval ëspessificà, e eseguì ij bloch ëspessificà.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Gionté na condission al blòch si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Gionté na condission final ch'a cheuj tut al blòch si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://code.google.com/p/blockly/wiki/If_Then";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Gionté, gavé o riordiné le session për cinfiguré torna ës blòch si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "dësnò";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "dësnò si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor a l'é ver, antlora eseguì chèiche anstrussion.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor a l'é ver, antlora eseguì ël prim blòch d'anstrussion. Dësnò, eseguì ël second blòch d'anstrussion.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si ël prim valor a l'é ver, antlora fé andé ël prim blòch d'anstrussion. Dësnò, si ël second valor a l'é ver, fé andé ël second blòch d'anstrussion.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si ël prim valor a l'é ver, antlora fé andé ël prim blòch d'anstrussion. Dësnò, si ël second valor a l'é ver, fé andé ël second blòcj d'anstrussion. Si gnun dij valor a l'é ver, fé andé l'ùltim blòch d'anstrussion.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "fé";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "arpete %1 vire";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "arpete";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "vire";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Eseguì chèiche anstrussion vàire vire.";
Blockly.Msg.CONTROLS_SWITCH = "switch ";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK = "break";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK_TOOLTIP = "break the statement and leave the switch block.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK_WARNING = "WARNING : This block must be in switch block.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_CASE = "case";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_CASE_TOOLTIP = "Add case.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_DEFAULT = "if there are no corresponding value";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_DO = "DO";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP1 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP2 = "if there are no corresponding value, do first block statement, if value correspond with second value, do second block statement, and if value correspond with third value, do third block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP3 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement, .... , and if value correspond with last value, do last block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP4 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement, .... , and if value correspond with last value, do last block statement.";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "arpete fin-a a";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "arpete antramentre che";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Cand un valor a l'é fàuss, eseguì chèiche anstrussion.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Cand un valor a l'é ver, eseguì chèiche anstrussion.";
Blockly.Msg.DEFINE_DECLARE_DEFAULT_NAME = "myMacro";  // untranslated
Blockly.Msg.DEFINE_DECLARE_INIT = "is";  // untranslated
Blockly.Msg.DEFINE_DECLARE_TITLE = "#define";  // untranslated
Blockly.Msg.DEFINE_GET_TITLE = "";  // untranslated
Blockly.Msg.DEFINE_SET_TYPE_CONSTANT = "constant";  // untranslated
Blockly.Msg.DEFINE_SET_TYPE_MACRO = "macro";  // untranslated
Blockly.Msg.DELETE_BLOCK = "Scancelé ël blòch";
Blockly.Msg.DELETE_X_BLOCKS = "Scancelé %1 blòch";
Blockly.Msg.DISABLE_BLOCK = "Disativé ël blòch";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliché";
Blockly.Msg.ENABLE_BLOCK = "Ativé ël blòch";
Blockly.Msg.EXPAND_ALL = "Dësvlupé ij blòch";
Blockly.Msg.EXPAND_BLOCK = "Dësvlupé ël blòch";
Blockly.Msg.EXTERNAL_INPUTS = "Imission esterne";
Blockly.Msg.FUNCTION_SET_TYPE_CHAR = "char";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_DOUBLE = "double";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_FLOAT = "float";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_INT = "int";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONG = "long";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONGDOUBLE = "long double";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONGLONG = "long long";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_SHORT = "short";  // untranslated
Blockly.Msg.HELP = "Agiut";
Blockly.Msg.INLINE_INPUTS = "Imission an linia";
Blockly.Msg.IOSTREAM_CIN_MUTATOR_CINADD_TITLE = ">>";  // untranslated
Blockly.Msg.IOSTREAM_CIN_TITLE = "cin >>";  // untranslated
Blockly.Msg.IOSTREAM_CIN_TOOLTIP = "Read input from terminal";  // untranslated
Blockly.Msg.IOSTREAM_COUT_MUTATOR_COUTADD_TITLE = "<<";  // untranslated
Blockly.Msg.IOSTREAM_COUT_TITLE = "cout <<";  // untranslated
Blockly.Msg.IOSTREAM_NEWLINE_TITLE = "end line";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://en.wikipedia.org/wiki/Linked_list#Empty_lists";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "creé na lista veuida";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Smon-e na lista, ëd longheur 0, ch'a conten gnun-a argistrassion";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Gionté, gavé o riordiné le session për configuré torna cost blòch ëd lista.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "creé na lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Gionté n'element a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Creé na lista con un nùmer qualsëssìa d'element.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "prim";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# da la fin";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "oten-e";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "oten-e e eliminé";
Blockly.Msg.LISTS_GET_INDEX_LAST = "ùltim";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "a l'ancàpit";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eliminé";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "A smon ël prim element an na lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "A smon l'element a la posission ëspessificà an na lista. #1 a l'é l'ùltim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "A smon l'element a la posission ëspessificà an na lista. #1 a l'é ël prim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "A smon l'ùltim element an na lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "A smon n'element a l'ancàpit an na lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "A gava e a smon ël prim element an na lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "A gava e a smon l'element a la posission ëspessificà an na lista. #1 a l'é l'ùltim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "A gava e a smon l'element a la posission ëspessificà an na lista. #1 a l'é 'l prim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "A gava e a smon l'ùltim element an na lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "A gava e a smon n'element a l'ancàpit an na lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "A gava ël prim element an na lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "A gava l'element a la posission ëspessificà an na lista. #1 a l'é l'ùltim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "A gava l'element a la posission ëspessificà an na lista. #1 a l'é ël prim element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "A gava l'ùltim element an na lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "A gava n'element a l'ancàpit da na lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "fin-a a # da la fin";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "fin-a a #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "fin-a a l'ùltim";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_a_sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "oten-e la sot-lista dal prim";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "oten-e la sot-lista da # da la fin";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "oten-e la sot-lista da #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "A crea na còpia dël tòch ëspessificà ëd na lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "trové la prima ocorensa dl'element";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_Items_from_a_List";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "trové l'ùltima ocorensa dl'element";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "A smon l'ìndes ëd la prima/ùltima ocorensa dl'element ant la lista. A smon 0 se ël test a l'é nen trovà.";
Blockly.Msg.LISTS_INLIST = "ant la lista";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#is_empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 a l'é veuid";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#length_of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longheur ëd %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "A smon la longheur ¨d na lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#create_list_with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "creé na lista con l'element %1 arpetù %2 vire";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "A crea na lista ch'a consist dël valor dàit arpetù ël nùmer ëspessificà ëd vire.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#in_list_..._set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "tanme";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "anserì an";
Blockly.Msg.LISTS_SET_INDEX_SET = "buté";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "A anseriss l'element al prinsipi ëd na lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "A anseriss l'element a la posission ëspessificà an na lista. #1 a l'é l'ùltim element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "A anseriss l'element a la posission ëspessificà an na lista. #1 a l'é ël prim element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Gionté l'element a la fin ëd na lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "A anseriss l'element a l'ancàpit an na lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "A fissa ël prim element an na lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "A fissa l'element a la posission ëspessificà an na lista. #1 a l'é l'ùltim element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "A fissa l'element a la posission ëspessificà an na lista. #1 a l'é ël prim element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "A fissa l'ùltim element an na lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "A fissa n'element a l'ancàpit an na lista.";
Blockly.Msg.LISTS_TOOLTIP = "A smon ver se la lista a l'é veuida.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "fàuss";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://code.google.com/p/blockly/wiki/True_False";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "A rëspond ver o fàuss.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "ver";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Rësponde ver si le doe imission a son uguaj.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Rësponde ver si la prima imission a l'é pi granda che la sconda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Rësponde ver si la prima imission a l'é pi granda o ugual a la sconda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Rësponde ver si la prima imission a l'é pi cita dla sconda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Rësponde ver si la prima imission a l'é pi cita o ugual a la sconda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Rësponde ver si le doe imission a son nen uguaj.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://en.wikipedia.org/wiki/Negation";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "nen %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "A rëspond ver se l'imission a l'é fàussa. A rëspond fàuss se l'imission a l'é vera.";
Blockly.Msg.LOGIC_NULL = "gnente";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "A rëspond gnente.";
Blockly.Msg.LOGIC_OPERATION_AND = "e";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://code.google.com/p/blockly/wiki/And_Or";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "o";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Rësponde ver se tute doe j'imission a son vere.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Rësponde ver se almanch un-a d'imission a l'é vera.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "preuva";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "se fàuss";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "se ver";
Blockly.Msg.MAINPROCEDURES_TOOLTIP = "basically provided main function block. return integer value";  // untranslated
Blockly.Msg.MAIN_BLOCK = "on start";  // untranslated
Blockly.Msg.MAIN_BLOCK_RETURN = "int type return value:";  // untranslated
Blockly.Msg.MATH_ABS_TITLE = "absolute value%1";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "A smon la soma ëd doi nùmer.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "A smon ël cossient dij doi nùmer.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "A smon la diferensa dij doi nùmer.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "A smon ël prodot dij doi nùmer.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "A smon ël prim nùmer alvà a la potensa dël second.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "për";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "ancrementé";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "A smon un-a dle costante comun-e π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) o ∞ (infinì).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "limité %1 antra %2 e %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Limité un nùmer a esse antra le limitassion ëspessificà (comprèise).";
Blockly.Msg.MATH_COS_TITLE = "cos %1";  // untranslated
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_EXP_TITLE = "exp %1";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "a l'é divisìbil për";
Blockly.Msg.MATH_IS_EVEN = "a l'é cobi";
Blockly.Msg.MATH_IS_NEGATIVE = "a l'é negativ";
Blockly.Msg.MATH_IS_ODD = "a l'é dëscobi";
Blockly.Msg.MATH_IS_POSITIVE = "a l'é positiv";
Blockly.Msg.MATH_IS_PRIME = "a l'é prim";
Blockly.Msg.MATH_IS_TOOLTIP = "A contròla si un nùmer a l'é cobi, dëscobi, prim, antreghm positiv, negativ, o s'a l'é divisìbil për un nùmer dàit. A rëspond ver o fàuss.";
Blockly.Msg.MATH_IS_WHOLE = "a l'é antregh";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resta ëd %1:%2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "A smon la resta ëd la division dij doi nùmer.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un nùmer.";
Blockly.Msg.MATH_NUMCHECK_ISFINITE = "finite value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_ISINF = "infinite value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_ISNAN = "NaN value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_SIGNBIT = "negative value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_TITLE = "%1 is a(an) %2 ?";  // untranslated
Blockly.Msg.MATH_NUMCHECK_TOOLTIP = "";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISGREATER = "greater";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISGREQ = "greater or equal";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLEEQ = "less or equal";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLEGR = "less or greater";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLESS = "less";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISUNORDER = "unordered";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_TITLE = "%1 is %3 than %2";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_TOOLTIP = "";  // untranslated
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "media dla lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "màssim ëd la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mesan-a dla lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mìnim ëd la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "mòde dla lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "element a l'ancàpit ëd la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "deviassion ëstàndard ëd la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "soma dla lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "A smon la media (aritmética) dij valor numérich ant la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "A smon ël pi gròss nùmer ëd la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "A smon ël nùmer mesan ëd la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "A smon ël pi cit nùmer ëd la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "A smon na lista dj'element pi frequent ëd la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "A smon n'element a l'ancàpit da la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "A smon la deviassion ëstàndard ëd la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "A smon la soma ëd tuti ij nùmer ant la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_POW_TITLE = "pow %1 ^ %2";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "frassion aleatòria";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "A smon na frassion aleatòria antra 0,0 (comprèis) e 1,0 (esclus).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "antregh aleatòri antra %1 e %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "A smon n'antregh aleatòri antra ij doi lìmit ëspessificà, comprèis.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_CEIL = "round up";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_FLOOR = "round down";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "ariondé";
Blockly.Msg.MATH_ROUND_OPERATOR_TRUNC = "truncate";  // untranslated
Blockly.Msg.MATH_ROUND_TOOLTIP = "A arionda un nùmer për difet o ecess.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "assolù";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "rèis quadra";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "A smon ël valor assolù d'un nùmer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "A smon e a la potensa d'un nùmer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG = "Return the natural logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "A smon ël logaritm an base 10 d'un nùmer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG2 = "Return the base 2 logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "A smon l'opòst d'un nùmer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW = "Return base to the power of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "A smon la rèis quadra d'un nùmer.";
Blockly.Msg.MATH_SIN_TITLE = "sin %1";  // untranslated
Blockly.Msg.MATH_SQRT_TITLE = "sqrt %1";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TAN_TITLE = "tan %1";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_LOG = "log";  // untranslated
Blockly.Msg.MATH_TRIG_LOG10 = "log10";  // untranslated
Blockly.Msg.MATH_TRIG_LOG2 = "log2";  // untranslated
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "A smon l'arch-cosen d'un nùmer.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "A smon l'arch-sen d'un nùmer.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "A smon l'arch-tangenta d'un nùmer.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "A smon ël cosen ëd n'àngol an gré (pa an radiant).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "A smon ël sen ëd n'àngol an gré (pa an radiant).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "A smon la tangenta ëd n'àngol an gré (pa an radiant).";
Blockly.Msg.ME = "Mi";
Blockly.Msg.NEW_VARIABLE = "Neuva variàbil...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nòm ëd la neuva variàbil:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PLZ_INSIDE_FUNCTION = "Warning: Place this block inside a function.";  // untranslated
Blockly.Msg.PLZ_OUT_OF_BLOCK = "Warning: This block can be placed out of other blocks except function block.";  // untranslated
Blockly.Msg.PLZ_OUT_OF_FUNCTION = "Warning: Place this block out of a function.";  // untranslated
Blockly.Msg.POINTER_GET_TITLE = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "përmëtte le diciairassion";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "fé cheicòs";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "a";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "A crea na fonsion sensa surtìa.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "artorn";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "A crea na fonsion con na surtìa.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Atension: Costa fonsion a l'ha dij paràmeter duplicà.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Sot-ligné la definission dla fonsion";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Se un valor a l'é ver, antlora smon-e un second valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Atension: Ës blòch a podria esse dovrà mach an na definission ëd fonsion.";
Blockly.Msg.PROCEDURES_ILLEGALNAME = "illegal function name";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nòm ëd l'imission:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Gionté n'imission a la fonsion.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "imission";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Gionté, gavé o riordiné j'imission ëd sa fonsion.";
Blockly.Msg.PROCEDURES_RETURN_TITLE = "terminate function after return ";  // untranslated
Blockly.Msg.PROCEDURES_RETURN_TOOLTIP = "Terminate function after return what you want to return. you can use it in anywhere";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Scancelé un coment";
Blockly.Msg.RENAME_VARIABLE = "Arnomé la variàbil...";
Blockly.Msg.SELECT_MENU = "--Select--";  // untranslated
Blockly.Msg.SELECT_TYPE = "--Type--";  // untranslated
Blockly.Msg.STDIO_NEWLINE_HELPURL = "https://en.wikipedia.org/wiki/Newline";  // untranslated
Blockly.Msg.STDIO_NEWLINE_TITLE = "new line";  // untranslated
Blockly.Msg.STDIO_NEWLINE_TOOLTIP = "new line character";  // untranslated
Blockly.Msg.STDIO_PRINTF_TITLE = "printf";  // untranslated
Blockly.Msg.STDIO_SCANF_HELPURL = "https://en.wikipedia.org/wiki/Scanf_format_string";  // untranslated
Blockly.Msg.STDIO_SCANF_TITLE = "scanf";  // untranslated
Blockly.Msg.STDIO_SCANF_TOOLTIP = "";  // untranslated
Blockly.Msg.STDIP_PRINTF_MUTATOR_PRINTFADD_TITLE = "Add";  // untranslated
Blockly.Msg.STDIP_SCANF_MUTATOR_SCANFADD_TITLE = "Add";  // untranslated
Blockly.Msg.STDLIB_ARITHFORMALLOC_TITLE = "%1 x %2";  // untranslated
Blockly.Msg.STDLIB_CONVERT_DOUBLE = "double";  // untranslated
Blockly.Msg.STDLIB_CONVERT_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STDLIB_CONVERT_INT = "int";  // untranslated
Blockly.Msg.STDLIB_CONVERT_TITLE = "Convert string %1 to %2";  // untranslated
Blockly.Msg.STDLIB_CONVERT_TOOLTIP = "Convert stirng to integer or double type.";  // untranslated
Blockly.Msg.STDLIB_EXIT_FAILURE = "failure";  // untranslated
Blockly.Msg.STDLIB_EXIT_HELPURL = "https://en.wikipedia.org/wiki/Exit_(system_call)";  // untranslated
Blockly.Msg.STDLIB_EXIT_SUCCESS = "success";  // untranslated
Blockly.Msg.STDLIB_EXIT_TITLE = "exit %1";  // untranslated
Blockly.Msg.STDLIB_EXIT_TOOLTIP = "Exit.";  // untranslated
Blockly.Msg.STDLIB_FREE_HELPURL = "https://en.wikipedia.org/wiki/C_dynamic_memory_allocation";  // untranslated
Blockly.Msg.STDLIB_FREE_TITLE = "free %1";  // untranslated
Blockly.Msg.STDLIB_FREE_TOOLTIP = "deallocate the memory";  // untranslated
Blockly.Msg.STDLIB_MALLOC_HELPURL = "https://en.wikipedia.org/wiki/C_dynamic_memory_allocation";  // untranslated
Blockly.Msg.STDLIB_MALLOC_TITLE = "malloc %1";  // untranslated
Blockly.Msg.STDLIB_MALLOC_TOOLTIP = "Dinamic memory allocation";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_HELPURL = "https://en.wikipedia.org/wiki/C_mathematical_functions#Random_number_generation";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_TITLE = "scope:%1~%2";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_TOOLTIP = "assign scope of random number.";  // untranslated
Blockly.Msg.STDLIB_RAND_HELPURL = "https://en.wikipedia.org/wiki/C_mathematical_functions#Random_number_generation";  // untranslated
Blockly.Msg.STDLIB_RAND_TITLE = "rand %1";  // untranslated
Blockly.Msg.STDLIB_RAND_TOOLTIP = "assign random number";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_HELPURL = "https://en.wikipedia.org/wiki/Sizeof";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_TITLE = "size of %1";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_TOOLTIP = "return the size by byte";  // untranslated
Blockly.Msg.STDLIB_SRAND_TITLE = "srand %1";  // untranslated
Blockly.Msg.STRING_STRCAT_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCAT_TITLE = "string add %1 and %2";  // untranslated
Blockly.Msg.STRING_STRCAT_TOOLTIP = "concat two strings";  // untranslated
Blockly.Msg.STRING_STRCMP_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCMP_TITLE = "string compare %1 and %2";  // untranslated
Blockly.Msg.STRING_STRCMP_TOOLTIP = "compare two strings";  // untranslated
Blockly.Msg.STRING_STRCPY_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCPY_TITLE = "string copy from %1 to %2";  // untranslated
Blockly.Msg.STRING_STRCPY_TOOLTIP = "copy first string into second string";  // untranslated
Blockly.Msg.STRING_STRLEN_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRLEN_TITLE = "string length %1";  // untranslated
Blockly.Msg.STRING_STRLEN_TOOLTIP = "return length of string";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_NAME = "myStructure1";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TALE = "name";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TITLE = "type";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TOOPTIP = "declare structure by selecting predefined structure(similar with declaring variables). it must be before using structure.";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_NAME = "myStructure";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_TITLE = "structure type name";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_TOOPTIP = "define structure. you can add, delete, rename the member of structure. it must be before using structure.";  // untranslated
Blockly.Msg.STRUCTURE_GET_MEMBER = "member";  // untranslated
Blockly.Msg.STRUCTURE_GET_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_GET_TOOLTIP = "return value of structure member or structure itself.";  // untranslated
Blockly.Msg.STRUCTURE_ILLEGALNAME = "illegal structure name";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORARG_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORARG_TOOLTIP = "add member of structure.";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORCONTAINER_TITLE = "members";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORCONTAINER_TOOLTIP = "add, delete, or rearrange member.";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_ARRAY = "array type";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_POINTER = "pointer type";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_VAR = "variable type";  // untranslated
Blockly.Msg.STRUCTURE_SET_MEMBER = "member";  // untranslated
Blockly.Msg.STRUCTURE_SET_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_SET_TOOLTIP = "assignment(set) the value into structure member or structure itself.";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "taché ël test";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "a";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Adjusting_text_case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "an minùscul";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "an Majùscol A L'Ancamin Ëd Minca Paròla";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "an MAJÙSCOL";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "A smon na còpia dël test ant un caràter diferent.";
Blockly.Msg.TEXT_CHARAT_FIRST = "oten-e la prima litra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "oten-e la litra # da la fin";
Blockly.Msg.TEXT_CHARAT_FROM_START = "oten-e la litra #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "ant ël test";
Blockly.Msg.TEXT_CHARAT_LAST = "oten-e l'ùltima litra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "oten-e na litra a l'ancàpit";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "A smon la litra ant la posission ëspessificà.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Gionté n'element al test.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "gionze";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Gionté, gavé o riordiné le session për configuré torna ës blòch ëd test.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "fin-a a la litra # da la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "fin-a a la litra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "fin-a a l'ùltima litra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_a_region_of_text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "ant ël test";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "oten-e la sota-stringa da la prima litra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "oten-e la sota-stringa da la litra # da la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "oten-e la sota-stringa da la litra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "A smon un tòch ëspessificà dël test.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Finding_text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "ant ël test";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "trové la prima ocorensa dël test";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "trové l'ùltima ocorensa dël test";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "A smon l'ìndes dla prima/ùltima ocorensa dël prim test ant ël second test. A smon 0 se ël test a l'é nen trovà.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Checking_for_empty_text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 a l'é veuid";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "A smon ver se ël test fornì a l'é veuid.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "creé ël test con";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Creé un tòch ëd test an gionzend un nùmer qualsëssìa d'element.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longheur ëd %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "A smon ël nùmer ëd litre (spassi comprèis) ant ël test fornì.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Printing_text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "smon-e %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Smon-e ël test, ël nùmer o n'àutr valor ëspessificà.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Getting_input_from_the_user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Ciamé un nùmer a l'utent.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Ciamé un test a l'utent.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "anvit për un nùmer con un mëssagi";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "anvit për un test con un mëssagi";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Na litra, na paròla o na linia ëd test.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Trimming_%28removing%29_spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "gavé jë spassi da le doe bande ëd";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "gavé jë spassi da la banda snistra ëd";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "gavé jë spassi da la banda drita ëd";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "A smon na còpia dël test con jë spassi gavà da n'estremità o da tute doe.";
Blockly.Msg.TIME_REQRUIEDTIME_TALE = "save in double variable %1";  // untranslated
Blockly.Msg.TIME_REQUIREDTIME_TITLE = "time to do followings";  // untranslated
Blockly.Msg.TIME_REQUIREDTIME_TOOLTIP = "save the time that is taken for doing followings into double variable";  // untranslated
Blockly.Msg.TIME_TIME_CURRENT_TITLE = "print current time";  // untranslated
Blockly.Msg.UNION_DEFINE_NAME = "myUnion";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_DEFAULT_NAME = "myArray";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_LENGTH = "length";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_TITLE = "array";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_DEFAULT_NAME = "myVariable";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_INIT = "initial value";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_NAME = "name";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_TITLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_TOOLTIP = "declare variables";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://code.google.com/p/blockly/wiki/Variables#Get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TITLE = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "A smon ël valor ëd sa variàbil.";
Blockly.Msg.VARIABLES_ILLEGALNAME = "illegal variable name";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_DEFAULT_NAME = "myPointer";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_ITERATION = "";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_TITLE = "pointer";  // untranslated
Blockly.Msg.VARIABLES_RETURN = "return ";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_ONE = "[]";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_THREE = "[][][]";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_TWO = "[][]";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_ARRAY = "array";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_POINTER = "pointer";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_VARIABLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_SET_HELPURL = "https://code.google.com/p/blockly/wiki/Variables#Set";  // untranslated
Blockly.Msg.VARIABLES_SET_ITERATION_DOUBLE = "**";  // untranslated
Blockly.Msg.VARIABLES_SET_ITERATION_NORMAL = "*";  // untranslated
Blockly.Msg.VARIABLES_SET_ITERATION_TRIPLE = "***";  // untranslated
Blockly.Msg.VARIABLES_SET_POINTER_SPEC_ONE = "*";  // untranslated
Blockly.Msg.VARIABLES_SET_POINTER_SPEC_TWO = "**";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "a";
Blockly.Msg.VARIABLES_SET_TITLE = "fissé";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Fissé costa variàbil ugual al valor d'imission.";
Blockly.Msg.VARIABLES_SET_TYPE_CHAR = "char";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_DOUBLE = "double";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_FLOAT = "float";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_INT = "int";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_UNSIGNED_INT = "unsigned int";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;


 // atuo generated donnot editBlockly.Msg.TAG_DEFINE_DECLARE = ['macro', 'constant'];
Blockly.Msg.TAG_DEFINE_GET = ['macro', 'constant', 'get'];
Blockly.Msg.TAG_VARIABLE_DECLARE = ['variables', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_SET = ['variables', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_GET = ['variables', 'get'];
Blockly.Msg.TAG_VARIABLE_POINTER_DECLARE = ['pointer', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_POINTER_SET = ['pointer', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_POINTER_GET = ['pointer', 'get'];
Blockly.Msg.TAG_VARIABLE_POINTER_ADDR = ['&', 'address'];
Blockly.Msg.TAG_VARIABLE_POINTER_ASTR = ['*', 'asterisk'];
Blockly.Msg.TAG_VARIABLE_ARRAY_DECLARE = ['array', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_ARRAY_SET = ['array', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_ARRAY_GET = ['array', 'get'];

Blockly.Msg.TAG_STRUCTURE_DEFINE = ['structure', 'typedef', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_STRUCTURE_DECLARE = ['structure', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_STRUCTURE_GET = ['structure', 'get'];
Blockly.Msg.TAG_STRUCTURE_SET = ['structure', 'assignment', 'set'];

Blockly.Msg.TAG_LOGIC_IF = ['if', 'if else', 'ifelse'];
Blockly.Msg.TAG_LOGIC_COMPARE = ['compare'];
Blockly.Msg.TAG_LOGIC_OPERATION = ['operation', 'and', 'or'];
Blockly.Msg.TAG_LOGIC_NEGATE = ['!', 'negate'];
Blockly.Msg.TAG_LOGIC_BOOLEAN = ['boolean', 'true', 'false'];
Blockly.Msg.TAG_LOGIC_NULL = ['null', 'null character'];
Blockly.Msg.TAG_LOGIC_TERNARY = ['?'];
Blockly.Msg.TAG_LOGIC_SWITCH = ['switch', 'case'];

Blockly.Msg.TAG_LOOP_WHILE = ['while', 'loop'];
Blockly.Msg.TAG_LOOP_FOR = ['for', 'loop'];
Blockly.Msg.TAG_LOOP_FLOW = ['break', 'continue'];

Blockly.Msg.TAG_PROCEDURE_DEFNORETURN = ['void', 'function'];
Blockly.Msg.TAG_PROCEDURE_DEFRETURN = ['function'];

Blockly.Msg.TAG_STDIO_PRINTF = ['stdio.h', 'printf()', 'output', 'out'];
Blockly.Msg.TAG_STDIO_TEXT = ['stdio.h', 'text'];
Blockly.Msg.TAG_STDIO_NEWLINE = ['stdio.h', 'newline', 'new line', '\n', 'change line', 'line change'];
Blockly.Msg.TAG_STDIO_SCANF = ['stdio.h', 'scanf()', 'input'];

Blockly.Msg.TAG_IOSTREAM_COUT = ['iostream', 'cout', 'output', 'out'];
Blockly.Msg.TAG_IOSTREAM_TEXT = ['iostream', 'text'];
Blockly.Msg.TAG_IOSTREAM_NEWLINE = ['iostream', 'newline', 'new line', '\n', 'change line', 'line change'];
Blockly.Msg.TAG_IOSTREAM_CIN = ['iostream', 'cin', 'input'];

Blockly.Msg.TAG_COMMENT = ['comment', 'Comment', '\/\/', '\/**\/'];

Blockly.Msg.TAG_STDLIB_CONVERT = ['stdlib.h', 'convert', 'atoi()', 'atof()'];
Blockly.Msg.TAG_STDLIB_RAND = ['stdlib.h', 'random number'];
Blockly.Msg.TAG_STDLIB_MALLOC = ['stdlib.h', 'malloc()', 'memory allocation', 'memory allocate'];
Blockly.Msg.TAG_STDLIB_SIZEOF = ['stdlib.h', 'sizeof()', 'size of', 'sizeOf'];
Blockly.Msg.TAG_STDLIB_FREE = ['stdlib.h', 'free()'];
Blockly.Msg.TAG_STDLIB_EXIT = ['stdlib.h', 'exit(0)', 'exit(1)', 'end', 'the end'];

Blockly.Msg.TAG_STRING_STRLEN = ['string.h', 'strlen()', 'string length', 'length of string'];
Blockly.Msg.TAG_STRING_STRCAT = ['string.h', 'strcat()', 'string concatenate', 'concatenate string'];
Blockly.Msg.TAG_STRING_STRCPY = ['string.h', 'strcpy()', 'string copy', 'copy string'];
Blockly.Msg.TAG_STRING_STRCMP = ['string.h', 'strcmp()', 'string compare', 'compare string'];

Blockly.Msg.TAG_MATH_ABS = ['math.h', 'absolute value'];
Blockly.Msg.TAG_MATH_TRIG = ['math.h', 'trigonometric function', 'sin()', 'cos()', 'tan()', 'sine function', 'cosine function', 'tangent function'];
Blockly.Msg.TAG_MATH_LOGS = ['math.h', 'log()', 'loge()', 'log10()', 'log2()', 'log e'];
Blockly.Msg.TAG_MATH_POW = ['math.h', 'power', 'pow()'];
Blockly.Msg.TAG_MATH_EXP = ['math.h', 'exponential function', 'exp()'];
Blockly.Msg.TAG_MATH_SQRT = ['math.h', 'sqrt()', 'square root'];
Blockly.Msg.TAG_MATH_ROUND = ['math.h', 'round up', 'round down', 'round()', 'trunc()', 'ceil()', 'floor()', 'truncate'];
Blockly.Msg.TAG_MATH_NUMCHECK = ['math.h', 'two number check'];
Blockly.Msg.TAG_MATH_NUMCOMPARE = ['math.h', 'two number compare'];
Blockly.Msg.TAG_MATH_NUMBER = ['number'];
Blockly.Msg.TAG_MATH_ARITHMETIC = ['number', 'arithmetic', 'additionsubtractionmultiplicationdivision', '+-*/'];
Blockly.Msg.TAG_MATH_MODULO = ['arithmetic', 'remainder', '%'];

Blockly.Msg.TAG_TIME_CURRENT = ['time.h', 'get current time', 'print current time'];
Blockly.Msg.TAG_TIME_REQUIREDTIME = ['time.h', 'the time to do followings'];