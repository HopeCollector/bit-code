// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.da');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Tilføj kommentar";
Blockly.Msg.ARRAY_GET_TITLE = "";  // untranslated
Blockly.Msg.AUTH = "Tillad venligst at denne app muliggør at du kan gemme dit arbejde og at du kan dele det.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Ændr værdi:";
Blockly.Msg.CHAT = "Chat med din samarbejdspartner ved at skrive i denne boks!";
Blockly.Msg.COLLAPSE_ALL = "Fold blokkene sammen";
Blockly.Msg.COLLAPSE_BLOCK = "Fold blokken sammen";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "farve 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "med farve 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "i forholdet";
Blockly.Msg.COLOUR_BLEND_TITLE = "bland";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blander to farver sammen i et bestemt forhold (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://da.wikipedia.org/wiki/Farve";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Vælg en farve fra paletten.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "tilfældig farve";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Vælg en tilfældig farve.";
Blockly.Msg.COLOUR_RGB_BLUE = "blå";
Blockly.Msg.COLOUR_RGB_GREEN = "grøn";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "rød";
Blockly.Msg.COLOUR_RGB_TITLE = "farve med";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Lav en farve med den angivne mængde af rød, grøn og blå. Alle værdier skal være mellem 0 og 100.";
Blockly.Msg.COMMENT_MUTATOR_COMMENTADD_TITLE = "Add";  // untranslated
Blockly.Msg.COMMENT_TITLE = "comment";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#Loop_Termination_Blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "bryd ud af løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "fortsæt med den næste gentagelse i løkken";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Bryd ud af den omgivende løkke.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Spring resten af denne løkke over, og fortsæt med den næste gentagelse.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advarsel: Denne blok kan kun bruges i en løkke.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#for_each for each block";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "i listen";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "for hvert element";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#count_with";  // untranslated
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "fra %1 til %2 med %3";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "tæl med";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Få variablen %1 til at have værdierne fra startværdien til slutværdien, mens der tælles med det angivne interval, og udfør de angivne blokke.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Tilføj en betingelse til denne \"hvis\" blok.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Tilføj en sidste fang-alt betingelse, til denne \"hvis\" blok.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://code.google.com/p/blockly/wiki/If_Then";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Tilføj, fjern eller byt om på rækkefølgen af delene for at konfigurere denne \"hvis\" blok.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "ellers";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "ellers hvis";
Blockly.Msg.CONTROLS_IF_MSG_IF = "hvis";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Hvis en værdi er sand, så udfør nogle kommandoer.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Hvis en værdi er sand, så udfør den første blok af kommandoer. Ellers udfør den anden blok af kommandoer.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Hvis den første værdi er sand, så udfør den første blok af kommandoer.  Ellers, hvis den anden værdi er sand, så udfør den anden blok af kommandoer.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Hvis den første værdi er sand, så udfør den første blok af kommandoer. Ellers, hvis den anden værdi er sand, så udfør den anden blok af kommandoer. Hvis ingen af værdierne er sande, så udfør den sidste blok af kommandoer.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://da.wikipedia.org/wiki/For-l%C3%B8kke";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "udfør";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "gentag %1 gange";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "gentag";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "gange";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Udfør nogle kommandoer flere gange.";
Blockly.Msg.CONTROLS_SWITCH = "switch ";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK = "break";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK_TOOLTIP = "break the statement and leave the switch block.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_BREAK_WARNING = "WARNING : This block must be in switch block.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_CASE = "case";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_CASE_TOOLTIP = "Add case.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_DEFAULT = "if there are no corresponding value";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_DO = "DO";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP1 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP2 = "if there are no corresponding value, do first block statement, if value correspond with second value, do second block statement, and if value correspond with third value, do third block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP3 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement, .... , and if value correspond with last value, do last block statement.";  // untranslated
Blockly.Msg.CONTROLS_SWITCH_TOOLTIP4 = "if there are no corresponding value, do first block statement and if value correspond with second value, do second block statement, .... , and if value correspond with last value, do last block statement.";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "gentag indtil";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "gentag sålænge";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Udfør nogle kommandoer, sålænge en værdi er falsk.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Udfør nogle kommandoer, sålænge en værdi er sand.";
Blockly.Msg.DEFINE_DECLARE_DEFAULT_NAME = "myMacro";  // untranslated
Blockly.Msg.DEFINE_DECLARE_INIT = "is";  // untranslated
Blockly.Msg.DEFINE_DECLARE_TITLE = "#define";  // untranslated
Blockly.Msg.DEFINE_GET_TITLE = "";  // untranslated
Blockly.Msg.DEFINE_SET_TYPE_CONSTANT = "constant";  // untranslated
Blockly.Msg.DEFINE_SET_TYPE_MACRO = "macro";  // untranslated
Blockly.Msg.DELETE_BLOCK = "Slet blok";
Blockly.Msg.DELETE_X_BLOCKS = "Slet %1 blokke";
Blockly.Msg.DISABLE_BLOCK = "Deaktivér blok";
Blockly.Msg.DUPLICATE_BLOCK = "Kopiér";
Blockly.Msg.ENABLE_BLOCK = "Aktivér blok";
Blockly.Msg.EXPAND_ALL = "Fold blokkene ud";
Blockly.Msg.EXPAND_BLOCK = "Fold blokken ud";
Blockly.Msg.EXTERNAL_INPUTS = "Udvendige inputs";
Blockly.Msg.FUNCTION_SET_TYPE_CHAR = "char";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_DOUBLE = "double";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_FLOAT = "float";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_INT = "int";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONG = "long";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONGDOUBLE = "long double";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_LONGLONG = "long long";  // untranslated
Blockly.Msg.FUNCTION_SET_TYPE_SHORT = "short";  // untranslated
Blockly.Msg.HELP = "Hjælp";
Blockly.Msg.INLINE_INPUTS = "Indlejrede inputs";
Blockly.Msg.IOSTREAM_CIN_MUTATOR_CINADD_TITLE = ">>";  // untranslated
Blockly.Msg.IOSTREAM_CIN_TITLE = "cin >>";  // untranslated
Blockly.Msg.IOSTREAM_CIN_TOOLTIP = "Read input from terminal";  // untranslated
Blockly.Msg.IOSTREAM_COUT_MUTATOR_COUTADD_TITLE = "<<";  // untranslated
Blockly.Msg.IOSTREAM_COUT_TITLE = "cout <<";  // untranslated
Blockly.Msg.IOSTREAM_NEWLINE_TITLE = "end line";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://en.wikipedia.org/wiki/Linked_list#Empty_lists";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "opret en tom liste";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returnerer en liste af længde 0, som ikke indeholder nogen data";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Tilføj, fjern eller byt om på rækkefølgen af delene for at konfigurere denne blok.";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "opret liste med";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Føj et element til listen.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Opret en liste med et vilkårligt antal elementer.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "første";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# fra slutningen";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "hent";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "hent og fjern";
Blockly.Msg.LISTS_GET_INDEX_LAST = "sidste";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "tilfældig";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "fjern";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returnerer det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returnerer elementet på den angivne position på en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returnerer elementet på den angivne position på en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returnerer den sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returnerer et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fjerner og returnerer det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Fjerner og returnerer elementet på den angivne position på en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Fjerner og returnerer elementet på den angivne position på en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fjerner og returnerer det sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fjerner og returnerer et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fjerner det første element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Fjerner elementet på den angivne position på en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Fjerner elementet på den angivne position på en liste. #1 er det første element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fjerner sidste element i en liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Fjerner et tilfældigt element i en liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "til # fra slutningen";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "til #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "til sidste";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_a_sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "hent underliste fra første";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "hent underliste fra # fra slutningen";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "hent underliste fra #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Opretter en kopi af den angivne del af en liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find første forekomst af elementet";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_Items_from_a_List";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "find sidste forekomst af elementet";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returnerer indeks for første/sidste forekomst af elementet i listen. Returnerer 0, hvis teksten ikke er fundet.";
Blockly.Msg.LISTS_INLIST = "i listen";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#is_empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1 er tom";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#length_of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "længden af %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returnerer længden af en liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#create_list_with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "opret liste med elementet %1 gentaget %2 gange";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Opretter en liste bestående af den givne værdi gentaget et bestemt antal gange.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#in_list_..._set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "som";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "sæt ind ved";
Blockly.Msg.LISTS_SET_INDEX_SET = "sæt";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Indsætter elementet i starten af en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Indsætter elementet på den angivne position i en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Indsætter elementet på den angivne position i en liste. #1 er det første element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Føj elementet til slutningen af en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Indsætter elementet tilfældigt i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sætter det første element i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sætter elementet på den angivne position i en liste. #1 er det sidste element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sætter elementet på den angivne position i en liste. #1 er det første element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Sætter det sidste element i en liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sætter et tilfældigt element i en liste.";
Blockly.Msg.LISTS_TOOLTIP = "Returnerer sand, hvis listen er tom.";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falsk";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://code.google.com/p/blockly/wiki/True_False";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returnerer enten sand eller falsk.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "sand";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://da.wikipedia.org/wiki/Ulighed_(matematik)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Returnere sand, hvis begge inputs er lig med hinanden.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Returnere sand, hvis det første input er større end det andet input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Returnere sand, hvis det første input er større end eller lig med det andet input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Returnere sand, hvis det første input er mindre end det andet input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Returnere sand, hvis det første input er mindre end eller lig med det andet input.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Returnere sand, hvis begge inputs ikke er lig med hinanden.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://en.wikipedia.org/wiki/Negation";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "ikke %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returnerer sand, hvis input er falsk. Returnerer falsk, hvis input er sandt.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returnerer null.";
Blockly.Msg.LOGIC_OPERATION_AND = "og";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://code.google.com/p/blockly/wiki/And_Or";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "eller";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Returnere sand, hvis begge inputs er sande.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Returnere sand, hvis mindst et af inputtene er sande.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "hvis falsk";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "hvis sand";
Blockly.Msg.MAINPROCEDURES_TOOLTIP = "basically provided main function block. return integer value";  // untranslated
Blockly.Msg.MAIN_BLOCK = "on start";  // untranslated
Blockly.Msg.MAIN_BLOCK_RETURN = "int type return value:";  // untranslated
Blockly.Msg.MATH_ABS_TITLE = "absolute value%1";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://da.wikipedia.org/wiki/Aritmetik";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Returnere summen af de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Returnere kvotienten af de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Returnere forskellen mellem de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Returnere produktet af de to tal.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Returnere det første tal opløftet til potensen af det andet tal.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_INPUT_BY = "med";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "ændr";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://da.wikipedia.org/wiki/Matematisk_konstant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Returnere en af de ofte brugte konstanter: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(2) (1.414…), sqrt(½) (0.707…) eller ∞ (uendeligt).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "begræns %1 til mellem %2 og %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Begræns et tal til at være mellem de angivne grænser (inklusiv).";
Blockly.Msg.MATH_COS_TITLE = "cos %1";  // untranslated
Blockly.Msg.MATH_DIVISION_SYMBOL = ":";
Blockly.Msg.MATH_EXP_TITLE = "exp %1";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "er deleligt med";
Blockly.Msg.MATH_IS_EVEN = "er lige";
Blockly.Msg.MATH_IS_NEGATIVE = "er negativt";
Blockly.Msg.MATH_IS_ODD = "er ulige";
Blockly.Msg.MATH_IS_POSITIVE = "er positivt";
Blockly.Msg.MATH_IS_PRIME = "er et primtal";
Blockly.Msg.MATH_IS_TOOLTIP = "Kontrollere, om et tal er lige, ulige, primtal, helt, positivt, negativt, eller om det er deleligt med bestemt tal. Returnere sandt eller falskt.";
Blockly.Msg.MATH_IS_WHOLE = "er helt";
Blockly.Msg.MATH_MODULO_HELPURL = "https://da.wikipedia.org/wiki/Modulo";
Blockly.Msg.MATH_MODULO_TITLE = "resten af %1 : %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Returner resten fra at dividere de to tal.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://da.wikipedia.org/wiki/Tal";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Et tal.";
Blockly.Msg.MATH_NUMCHECK_ISFINITE = "finite value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_ISINF = "infinite value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_ISNAN = "NaN value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_SIGNBIT = "negative value";  // untranslated
Blockly.Msg.MATH_NUMCHECK_TITLE = "%1 is a(an) %2 ?";  // untranslated
Blockly.Msg.MATH_NUMCHECK_TOOLTIP = "";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISGREATER = "greater";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISGREQ = "greater or equal";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLEEQ = "less or equal";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLEGR = "less or greater";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISLESS = "less";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_ISUNORDER = "unordered";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_TITLE = "%1 is %3 than %2";  // untranslated
Blockly.Msg.MATH_NUMCOMPARE_TOOLTIP = "";  // untranslated
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "gennemsnit af listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "største tal i listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "listens median";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mindste tal i listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "listens typetal";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "tilfældigt element fra listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standardafvigelsen for listen";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "summen af listen";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Returner gennemsnittet (middelværdien) af de numeriske værdier i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Returner det største tal i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Returner listens median.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Returner det mindste tal i listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Returner en liste over de mest almindelige elementer på listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Returner et tilfældigt element fra listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Returner standardafvigelsen for listen.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Returner summen af alle tal i listen.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_POW_TITLE = "pow %1 ^ %2";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://da.wikipedia.org/wiki/Tilfældighedsgenerator";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "tilfældigt decimaltal (mellem 0 og 1)";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Returner et tilfældigt decimaltal mellem 0,0 (inklusiv) og 1,0 (eksklusiv).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://da.wikipedia.org/wiki/Tilfældighedsgenerator";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "tilfældigt heltal mellem %1 og %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Returner et tilfældigt heltal mellem de to angivne grænser (inklusiv).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://da.wikipedia.org/wiki/Afrunding";
Blockly.Msg.MATH_ROUND_OPERATOR_CEIL = "round up";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_FLOOR = "round down";  // untranslated
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "afrund";
Blockly.Msg.MATH_ROUND_OPERATOR_TRUNC = "truncate";  // untranslated
Blockly.Msg.MATH_ROUND_TOOLTIP = "Runde et tal op eller ned.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://da.wikipedia.org/wiki/Kvadratrod";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolut";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "kvadratrod";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Returnere den absolutte værdi af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Returnere e til potensen af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG = "Return the natural logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Returnere 10-talslogaritmen af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG2 = "Return the base 2 logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Returnere negationen af et tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW = "Return base to the power of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Returnere kvadratroden af et tal.";
Blockly.Msg.MATH_SIN_TITLE = "sin %1";  // untranslated
Blockly.Msg.MATH_SQRT_TITLE = "sqrt %1";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TAN_TITLE = "tan %1";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://da.wikipedia.org/wiki/Trigonometrisk_funktion";
Blockly.Msg.MATH_TRIG_LOG = "log";  // untranslated
Blockly.Msg.MATH_TRIG_LOG10 = "log10";  // untranslated
Blockly.Msg.MATH_TRIG_LOG2 = "log2";  // untranslated
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Returnere arcus cosinus af et tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Returnere arcus sinus af et tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Returnere arcus tangens af et tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Returnere cosinus af en vinkel (i grader).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Returnere sinus af en vinkel (i grader).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Returnere tangens af en vinkel (i grader).";
Blockly.Msg.ME = "Mig";
Blockly.Msg.NEW_VARIABLE = "Ny variabel...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Navn til den nye variabel:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PLZ_INSIDE_FUNCTION = "Warning: Place this block inside a function.";  // untranslated
Blockly.Msg.PLZ_OUT_OF_BLOCK = "Warning: This block can be placed out of other blocks except function block.";  // untranslated
Blockly.Msg.PLZ_OUT_OF_FUNCTION = "Warning: Place this block out of a function.";  // untranslated
Blockly.Msg.POINTER_GET_TITLE = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";  // untranslated
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://da.wikipedia.org/wiki/Funktion_%28programmering%29";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://da.wikipedia.org/wiki/Funktion_%28programmering%29";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "gøre noget";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "for at";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Opretter en funktion der ikke har output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "returnér";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Opretter en funktion der har output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advarsel: Denne funktion har dublerede parametre.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Markér funktionsdefinitionen";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Hvis en værdi er sand, så returnér en anden værdi.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advarsel: Denne blok kan kun anvendes inden for en funktionsdefinition.";
Blockly.Msg.PROCEDURES_ILLEGALNAME = "illegal function name";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "parameternavn:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Tilføj et input til funktionen.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inputs";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Tilføje, fjerne eller ændre rækkefølgen af input til denne funktion.";
Blockly.Msg.PROCEDURES_RETURN_TITLE = "terminate function after return ";  // untranslated
Blockly.Msg.PROCEDURES_RETURN_TOOLTIP = "Terminate function after return what you want to return. you can use it in anywhere";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Fjern kommentar";
Blockly.Msg.RENAME_VARIABLE = "Omdøb variabel...";
Blockly.Msg.SELECT_MENU = "--Select--";  // untranslated
Blockly.Msg.SELECT_TYPE = "--Type--";  // untranslated
Blockly.Msg.STDIO_NEWLINE_HELPURL = "https://en.wikipedia.org/wiki/Newline";  // untranslated
Blockly.Msg.STDIO_NEWLINE_TITLE = "new line";  // untranslated
Blockly.Msg.STDIO_NEWLINE_TOOLTIP = "new line character";  // untranslated
Blockly.Msg.STDIO_PRINTF_TITLE = "printf";  // untranslated
Blockly.Msg.STDIO_SCANF_HELPURL = "https://en.wikipedia.org/wiki/Scanf_format_string";  // untranslated
Blockly.Msg.STDIO_SCANF_TITLE = "scanf";  // untranslated
Blockly.Msg.STDIO_SCANF_TOOLTIP = "";  // untranslated
Blockly.Msg.STDIP_PRINTF_MUTATOR_PRINTFADD_TITLE = "Add";  // untranslated
Blockly.Msg.STDIP_SCANF_MUTATOR_SCANFADD_TITLE = "Add";  // untranslated
Blockly.Msg.STDLIB_ARITHFORMALLOC_TITLE = "%1 x %2";  // untranslated
Blockly.Msg.STDLIB_CONVERT_DOUBLE = "double";  // untranslated
Blockly.Msg.STDLIB_CONVERT_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STDLIB_CONVERT_INT = "int";  // untranslated
Blockly.Msg.STDLIB_CONVERT_TITLE = "Convert string %1 to %2";  // untranslated
Blockly.Msg.STDLIB_CONVERT_TOOLTIP = "Convert stirng to integer or double type.";  // untranslated
Blockly.Msg.STDLIB_EXIT_FAILURE = "failure";  // untranslated
Blockly.Msg.STDLIB_EXIT_HELPURL = "https://en.wikipedia.org/wiki/Exit_(system_call)";  // untranslated
Blockly.Msg.STDLIB_EXIT_SUCCESS = "success";  // untranslated
Blockly.Msg.STDLIB_EXIT_TITLE = "exit %1";  // untranslated
Blockly.Msg.STDLIB_EXIT_TOOLTIP = "Exit.";  // untranslated
Blockly.Msg.STDLIB_FREE_HELPURL = "https://en.wikipedia.org/wiki/C_dynamic_memory_allocation";  // untranslated
Blockly.Msg.STDLIB_FREE_TITLE = "free %1";  // untranslated
Blockly.Msg.STDLIB_FREE_TOOLTIP = "deallocate the memory";  // untranslated
Blockly.Msg.STDLIB_MALLOC_HELPURL = "https://en.wikipedia.org/wiki/C_dynamic_memory_allocation";  // untranslated
Blockly.Msg.STDLIB_MALLOC_TITLE = "malloc %1";  // untranslated
Blockly.Msg.STDLIB_MALLOC_TOOLTIP = "Dinamic memory allocation";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_HELPURL = "https://en.wikipedia.org/wiki/C_mathematical_functions#Random_number_generation";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_TITLE = "scope:%1~%2";  // untranslated
Blockly.Msg.STDLIB_RANDSCOPE_TOOLTIP = "assign scope of random number.";  // untranslated
Blockly.Msg.STDLIB_RAND_HELPURL = "https://en.wikipedia.org/wiki/C_mathematical_functions#Random_number_generation";  // untranslated
Blockly.Msg.STDLIB_RAND_TITLE = "rand %1";  // untranslated
Blockly.Msg.STDLIB_RAND_TOOLTIP = "assign random number";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_HELPURL = "https://en.wikipedia.org/wiki/Sizeof";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_TITLE = "size of %1";  // untranslated
Blockly.Msg.STDLIB_SIZEOFFORMALLOC_TOOLTIP = "return the size by byte";  // untranslated
Blockly.Msg.STDLIB_SRAND_TITLE = "srand %1";  // untranslated
Blockly.Msg.STRING_STRCAT_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCAT_TITLE = "string add %1 and %2";  // untranslated
Blockly.Msg.STRING_STRCAT_TOOLTIP = "concat two strings";  // untranslated
Blockly.Msg.STRING_STRCMP_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCMP_TITLE = "string compare %1 and %2";  // untranslated
Blockly.Msg.STRING_STRCMP_TOOLTIP = "compare two strings";  // untranslated
Blockly.Msg.STRING_STRCPY_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRCPY_TITLE = "string copy from %1 to %2";  // untranslated
Blockly.Msg.STRING_STRCPY_TOOLTIP = "copy first string into second string";  // untranslated
Blockly.Msg.STRING_STRLEN_HELPURL = "https://en.wikipedia.org/wiki/C_string_handling";  // untranslated
Blockly.Msg.STRING_STRLEN_TITLE = "string length %1";  // untranslated
Blockly.Msg.STRING_STRLEN_TOOLTIP = "return length of string";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_NAME = "myStructure1";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TALE = "name";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TITLE = "type";  // untranslated
Blockly.Msg.STRUCTURE_DECLARE_TOOPTIP = "declare structure by selecting predefined structure(similar with declaring variables). it must be before using structure.";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_NAME = "myStructure";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_TITLE = "structure type name";  // untranslated
Blockly.Msg.STRUCTURE_DEFINE_TOOPTIP = "define structure. you can add, delete, rename the member of structure. it must be before using structure.";  // untranslated
Blockly.Msg.STRUCTURE_GET_MEMBER = "member";  // untranslated
Blockly.Msg.STRUCTURE_GET_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_GET_TOOLTIP = "return value of structure member or structure itself.";  // untranslated
Blockly.Msg.STRUCTURE_ILLEGALNAME = "illegal structure name";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORARG_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORARG_TOOLTIP = "add member of structure.";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORCONTAINER_TITLE = "members";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORCONTAINER_TOOLTIP = "add, delete, or rearrange member.";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_ARRAY = "array type";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_POINTER = "pointer type";  // untranslated
Blockly.Msg.STRUCTURE_MUTATORMEM_VAR = "variable type";  // untranslated
Blockly.Msg.STRUCTURE_SET_MEMBER = "member";  // untranslated
Blockly.Msg.STRUCTURE_SET_NAME = "name";  // untranslated
Blockly.Msg.STRUCTURE_SET_TOOLTIP = "assignment(set) the value into structure member or structure itself.";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "tilføj tekst";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "til";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Adjusting_text_case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "til små bogstaver";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "til Stort Begyndelsesbogstav";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "til STORE BOGSTAVER";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Returner en kopi af teksten hvor bogstaverne enten er udelukkende store eller små, eller hvor første bogstav i hvert ord er stort.";
Blockly.Msg.TEXT_CHARAT_FIRST = "hent første bogstav";
Blockly.Msg.TEXT_CHARAT_FROM_END = "hent bogstav # fra slutningen";
Blockly.Msg.TEXT_CHARAT_FROM_START = "hent bogstav #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "i teksten";
Blockly.Msg.TEXT_CHARAT_LAST = "hent sidste bogstav";
Blockly.Msg.TEXT_CHARAT_RANDOM = "hent tilfældigt bogstav";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returnerer bogstavet på den angivne placering.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Føj et element til teksten.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "sammenføj";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Tilføj, fjern eller byt om på rækkefølgen af delene for at konfigurere denne tekstblok.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "til bogstav # fra slutningen";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "til bogstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "til sidste bogstav";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_a_region_of_text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "i teksten";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "hent delstreng fra første bogstav";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "hent delstreng fra bogstav # fra slutningen";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "hent delstreng fra bogstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returnerer den angivne del af teksten.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Finding_text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "i teksten";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find første forekomst af teksten";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find sidste forekomst af teksten";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returnerer indeks for første/sidste forekomst af første tekst i den anden tekst.  Returnerer 0, hvis teksten ikke kan findes.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Checking_for_empty_text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 er tom";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returnerer sand, hvis den angivne tekst er tom.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "lav en tekst med";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Lav et stykke tekst ved at sætte et antal elementer sammen.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "længden af %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returnerer antallet af bogstaver (herunder mellemrum) i den angivne tekst.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Printing_text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "skriv %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Skriv den angivne tekst, tal eller anden værdi.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Getting_input_from_the_user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Spørg brugeren efter et tal";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Spørg brugeren efter en tekst";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "spørg efter et tal med meddelelsen";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "spørg efter tekst med meddelelsen";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://da.wikipedia.org/wiki/Tekststreng";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "En bogstav, et ord eller en linje med tekst.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Trimming_%28removing%29_spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "fjern mellemrum fra begge sider af";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "fjern mellemrum fra venstre side af";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "fjern mellemrum fra højre side af";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Returner en kopi af teksten med mellemrum fjernet fra den ene eller begge sider.";
Blockly.Msg.TIME_REQRUIEDTIME_TALE = "save in double variable %1";  // untranslated
Blockly.Msg.TIME_REQUIREDTIME_TITLE = "time to do followings";  // untranslated
Blockly.Msg.TIME_REQUIREDTIME_TOOLTIP = "save the time that is taken for doing followings into double variable";  // untranslated
Blockly.Msg.TIME_TIME_CURRENT_TITLE = "print current time";  // untranslated
Blockly.Msg.UNION_DEFINE_NAME = "myUnion";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_DEFAULT_NAME = "myArray";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_LENGTH = "length";  // untranslated
Blockly.Msg.VARIABLES_ARRAY_DECLARE_TITLE = "array";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_DEFAULT_NAME = "myVariable";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_INIT = "initial value";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_NAME = "name";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_TITLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_DECLARE_TOOLTIP = "declare variables";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "element";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://code.google.com/p/blockly/wiki/Variables#Get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TITLE = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returnerer værdien af denne variabel.";
Blockly.Msg.VARIABLES_ILLEGALNAME = "illegal variable name";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_DEFAULT_NAME = "myPointer";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_ITERATION = "";  // untranslated
Blockly.Msg.VARIABLES_POINTER_DECLARE_TITLE = "pointer";  // untranslated
Blockly.Msg.VARIABLES_RETURN = "return ";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_ONE = "[]";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_THREE = "[][][]";  // untranslated
Blockly.Msg.VARIABLES_SET_ARRAY_SPEC_TWO = "[][]";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_ARRAY = "array";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_POINTER = "pointer";  // untranslated
Blockly.Msg.VARIABLES_SET_DIST_VARIABLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_SET_HELPURL = "https://code.google.com/p/blockly/wiki/Variables#Set";  // untranslated
Blockly.Msg.VARIABLES_SET_ITERATION_DOUBLE = "**";  // untranslated
Blockly.Msg.VARIABLES_SET_ITERATION_NORMAL = "*";  // untranslated
Blockly.Msg.VARIABLES_SET_ITERATION_TRIPLE = "***";  // untranslated
Blockly.Msg.VARIABLES_SET_POINTER_SPEC_ONE = "*";  // untranslated
Blockly.Msg.VARIABLES_SET_POINTER_SPEC_TWO = "**";  // untranslated
Blockly.Msg.VARIABLES_SET_TAIL = "til";
Blockly.Msg.VARIABLES_SET_TITLE = "sæt";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sætter denne variabel til at være lig med input.";
Blockly.Msg.VARIABLES_SET_TYPE_CHAR = "character";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_DOUBLE = "real number(double)";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_FLOAT = "real number(float)";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_INT = "integer";  // untranslated
Blockly.Msg.VARIABLES_SET_TYPE_UNSIGNED_INT = "unsigned int";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;


 // atuo generated donnot editBlockly.Msg.TAG_DEFINE_DECLARE = ['macro', 'constant'];
Blockly.Msg.TAG_DEFINE_GET = ['macro', 'constant', 'get'];
Blockly.Msg.TAG_VARIABLE_DECLARE = ['variables', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_SET = ['variables', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_GET = ['variables', 'get'];
Blockly.Msg.TAG_VARIABLE_POINTER_DECLARE = ['pointer', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_POINTER_SET = ['pointer', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_POINTER_GET = ['pointer', 'get'];
Blockly.Msg.TAG_VARIABLE_POINTER_ADDR = ['&', 'address'];
Blockly.Msg.TAG_VARIABLE_POINTER_ASTR = ['*', 'asterisk'];
Blockly.Msg.TAG_VARIABLE_ARRAY_DECLARE = ['array', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_VARIABLE_ARRAY_SET = ['array', 'assignment', 'set'];
Blockly.Msg.TAG_VARIABLE_ARRAY_GET = ['array', 'get'];

Blockly.Msg.TAG_STRUCTURE_DEFINE = ['structure', 'typedef', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_STRUCTURE_DECLARE = ['structure', 'declare', 'define', 'declaration', 'definition'];
Blockly.Msg.TAG_STRUCTURE_GET = ['structure', 'get'];
Blockly.Msg.TAG_STRUCTURE_SET = ['structure', 'assignment', 'set'];

Blockly.Msg.TAG_LOGIC_IF = ['if', 'if else', 'ifelse'];
Blockly.Msg.TAG_LOGIC_COMPARE = ['compare'];
Blockly.Msg.TAG_LOGIC_OPERATION = ['operation', 'and', 'or'];
Blockly.Msg.TAG_LOGIC_NEGATE = ['!', 'negate'];
Blockly.Msg.TAG_LOGIC_BOOLEAN = ['boolean', 'true', 'false'];
Blockly.Msg.TAG_LOGIC_NULL = ['null', 'null character'];
Blockly.Msg.TAG_LOGIC_TERNARY = ['?'];
Blockly.Msg.TAG_LOGIC_SWITCH = ['switch', 'case'];

Blockly.Msg.TAG_LOOP_WHILE = ['while', 'loop'];
Blockly.Msg.TAG_LOOP_FOR = ['for', 'loop'];
Blockly.Msg.TAG_LOOP_FLOW = ['break', 'continue'];

Blockly.Msg.TAG_PROCEDURE_DEFNORETURN = ['void', 'function'];
Blockly.Msg.TAG_PROCEDURE_DEFRETURN = ['function'];

Blockly.Msg.TAG_STDIO_PRINTF = ['stdio.h', 'printf()', 'output', 'out'];
Blockly.Msg.TAG_STDIO_TEXT = ['stdio.h', 'text'];
Blockly.Msg.TAG_STDIO_NEWLINE = ['stdio.h', 'newline', 'new line', '\n', 'change line', 'line change'];
Blockly.Msg.TAG_STDIO_SCANF = ['stdio.h', 'scanf()', 'input'];

Blockly.Msg.TAG_IOSTREAM_COUT = ['iostream', 'cout', 'output', 'out'];
Blockly.Msg.TAG_IOSTREAM_TEXT = ['iostream', 'text'];
Blockly.Msg.TAG_IOSTREAM_NEWLINE = ['iostream', 'newline', 'new line', '\n', 'change line', 'line change'];
Blockly.Msg.TAG_IOSTREAM_CIN = ['iostream', 'cin', 'input'];

Blockly.Msg.TAG_COMMENT = ['comment', 'Comment', '\/\/', '\/**\/'];

Blockly.Msg.TAG_STDLIB_CONVERT = ['stdlib.h', 'convert', 'atoi()', 'atof()'];
Blockly.Msg.TAG_STDLIB_RAND = ['stdlib.h', 'random number'];
Blockly.Msg.TAG_STDLIB_MALLOC = ['stdlib.h', 'malloc()', 'memory allocation', 'memory allocate'];
Blockly.Msg.TAG_STDLIB_SIZEOF = ['stdlib.h', 'sizeof()', 'size of', 'sizeOf'];
Blockly.Msg.TAG_STDLIB_FREE = ['stdlib.h', 'free()'];
Blockly.Msg.TAG_STDLIB_EXIT = ['stdlib.h', 'exit(0)', 'exit(1)', 'end', 'the end'];

Blockly.Msg.TAG_STRING_STRLEN = ['string.h', 'strlen()', 'string length', 'length of string'];
Blockly.Msg.TAG_STRING_STRCAT = ['string.h', 'strcat()', 'string concatenate', 'concatenate string'];
Blockly.Msg.TAG_STRING_STRCPY = ['string.h', 'strcpy()', 'string copy', 'copy string'];
Blockly.Msg.TAG_STRING_STRCMP = ['string.h', 'strcmp()', 'string compare', 'compare string'];

Blockly.Msg.TAG_MATH_ABS = ['math.h', 'absolute value'];
Blockly.Msg.TAG_MATH_TRIG = ['math.h', 'trigonometric function', 'sin()', 'cos()', 'tan()', 'sine function', 'cosine function', 'tangent function'];
Blockly.Msg.TAG_MATH_LOGS = ['math.h', 'log()', 'loge()', 'log10()', 'log2()', 'log e'];
Blockly.Msg.TAG_MATH_POW = ['math.h', 'power', 'pow()'];
Blockly.Msg.TAG_MATH_EXP = ['math.h', 'exponential function', 'exp()'];
Blockly.Msg.TAG_MATH_SQRT = ['math.h', 'sqrt()', 'square root'];
Blockly.Msg.TAG_MATH_ROUND = ['math.h', 'round up', 'round down', 'round()', 'trunc()', 'ceil()', 'floor()', 'truncate'];
Blockly.Msg.TAG_MATH_NUMCHECK = ['math.h', 'two number check'];
Blockly.Msg.TAG_MATH_NUMCOMPARE = ['math.h', 'two number compare'];
Blockly.Msg.TAG_MATH_NUMBER = ['number'];
Blockly.Msg.TAG_MATH_ARITHMETIC = ['number', 'arithmetic', 'additionsubtractionmultiplicationdivision', '+-*/'];
Blockly.Msg.TAG_MATH_MODULO = ['arithmetic', 'remainder', '%'];

Blockly.Msg.TAG_TIME_CURRENT = ['time.h', 'get current time', 'print current time'];
Blockly.Msg.TAG_TIME_REQUIREDTIME = ['time.h', 'the time to do followings'];